from flask import Flask, request, jsonify, render_template
import requests
from bs4 import BeautifulSoup

app = Flask(__name__)

# Function to scrape student discounts in Zwolle
def scrape_discounts(query):
    search_url = f"https://www.google.com/search?q={query}+student+discount+Zwolle"
    headers = {"User-Agent": "Mozilla/5.0"}
    
    try:
        response = requests.get(search_url, headers=headers)
        response.raise_for_status()  # Will raise HTTPError for bad responses
    except requests.exceptions.RequestException as e:
        print(f"Error during request: {e}")
        return []

    soup = BeautifulSoup(response.text, "html.parser")
    results = []

    for g in soup.find_all('div', class_='tF2Cxc'):
        title = g.find('h3').text if g.find('h3') else 'No Title'
        link = g.find('a')['href'] if g.find('a') else '#'
        snippet = g.find('span', class_='aCOpRe').text if g.find('span', class_='aCOpRe') else 'No Description'
        
        results.append({
            "title": title,
            "link": link,
            "snippet": snippet
        })

    return results

@app.route('/')
def home():
    return render_template("index.html")

@app.route('/search', methods=['GET'])
def search():
    query = request.args.get('query', 'local businesses')
    if not query:
        return jsonify({"error": "No query parameter provided"}), 400

    data = scrape_discounts(query)
    
    if not data:
        return jsonify({"error": "No results found"}), 404
    
    return jsonify(data)

if __name__ == '__main__':
    app.run(debug=True)
